strokes = {
    "A": 3,
    "B": 2,
    "C": 1,
    "D": 2,
    "E": 4,
    "F": 3,
    "G": 1,
    "H": 3,
    "I": 1,
    "J": 1,
    "K": 3,
    "L": 1,
    "M": 3,
    "N": 2,
    "O": 1,
    "P": 2,
    "Q": 2,
    "R": 2,
    "S": 1,
    "T": 2,
    "U": 1,
    "V": 1,
    "W": 1,
    "X": 2,
    "Y": 2,
    "Z": 1,
}

# 입력
N, M = map(int, input().split())
A, B = input().split()

# 이름 섞기
mixed_string = ""
for i in range(min(N, M)):
    mixed_string += A[i] + B[i]

# 짧은 문자열 기준으로 합치고 남은 문자수
remained_index = abs(N - M)

# A, B의 길이가 다른경우 더 긴쪽을 혼합문자열? 뒤에 붙이기
if N == M:
    pass
elif N > M:
    mixed_string += A[-remained_index:]
else:
    mixed_string += B[-remained_index:]

# 이름을 정수배열로 변환
name = []
for char in mixed_string:
    name.append(strokes[char])

# 궁합보기
while len(name) != 2:
    temp_name = []

    for i in range(len(name) - 1):
        # 궁합을 본 뒤 그 숫자가 10을 넘을 때의 10을 빼주는 처리는 하지 않았음
        temp_name.append(name[i] + name[i + 1])
    name = temp_name

"""
※참고용
[4, 7, 5, 5, 6, 3, 4, 4, 2, 3, 5, 4, 4, 5, 3, 2, 4, 6, 4, 3, 5]
[11, 12, 10, 11, 9, 7, 8, 6, 5, 8, 9, 8, 9, 8, 5, 6, 10, 10, 7, 8]
[23, 22, 21, 20, 16, 15, 14, 11, 13, 17, 17, 17, 17, 13, 11, 16, 20, 17, 15]
[45, 43, 41, 36, 31, 29, 25, 24, 30, 34, 34, 34, 30, 24, 27, 36, 37, 32]
[88, 84, 77, 67, 60, 54, 49, 54, 64, 68, 68, 64, 54, 51, 63, 73, 69]
[172, 161, 144, 127, 114, 103, 103, 118, 132, 136, 132, 118, 105, 114, 136, 142]
[333, 305, 271, 241, 217, 206, 221, 250, 268, 268, 250, 223, 219, 250, 278]
[638, 576, 512, 458, 423, 427, 471, 518, 536, 518, 473, 442, 469, 528]
[1214, 1088, 970, 881, 850, 898, 989, 1054, 1054, 991, 915, 911, 997]
[2302, 2058, 1851, 1731, 1748, 1887, 2043, 2108, 2045, 1906, 1826, 1908]
[4360, 3909, 3582, 3479, 3635, 3930, 4151, 4153, 3951, 3732, 3734]
[8269, 7491, 7061, 7114, 7565, 8081, 8304, 8104, 7683, 7466]
[15760, 14552, 14175, 14679, 15646, 16385, 16408, 15787, 15149]
[30312, 28727, 28854, 30325, 32031, 32793, 32195, 30936]
[59039, 57581, 59179, 62356, 64824, 64988, 63131]
[116620, 116760, 121535, 127180, 129812, 128119]
[233380, 238295, 248715, 256992, 257931]
[471675, 487010, 505707, 514923]
[958685, 992717, 1020630]
[1951402, 2013347]
"""

# 궁합의 최종결과에서 각 일의자리만 추출
result_sip = name[0] % 10
result_ill = name[1] % 10

# 십의자리가 0일때 처리
if result_sip == 0:
    result_sip = ""

print(f"{result_sip}{result_ill}%")
